Turbo Assembler	 Version 4.1	    02/14/23 23:56:13	    Page 1
ramka.asm



      1	0000			     .model tiny
      2	0000			     .code
      3
      4				     org 100h
      5
      6				     locals @@
      7
      8	0100			     Start:
      9	0100  B8 0501			     mov ax, 0501h
     10	0103  BA 0502			     mov dx, 0502h
     11
     12	0106  BB B800			     mov bx, 0b800h
     13	0109  8E C3			     mov es, bx
     14	010B  BB 0668			     mov bx, 160d * 10d	+ 40d
     15
     16	010E  B9 001E			     mov cx, 30d
     17	0111  BF 0005			     mov di, 5d
     18
     19	0114  E8 0001			     call DrawRect
     20
     21	0117  C3			     ret
     22
     23				     ;-------------------------------------------------------------
     24				     ; Draws rectangle on screen with given borders
     25				     ;-------------------------------------------------------------
     26				     ; Entry:	     AX	- horizontal border
     27				     ;		     DX	- vertical   border
     28				     ;		     BX	- left highest point
     29				     ;		     CX	- horizontal size
     30				     ;		     DI	- vertical   size
     31				     ; Exit:	     None
     32				     ; Expects:	     ES	-> videomem (0b800h)
     33				     ; Destroys:     BP, SI
     34				     ;-------------------------------------------------------------
     35	0118			     DrawRect	     proc
     36
     37	0118  8B F7				     mov si, di		     ; i = di
     38	011A  EB 0C 90				     jmp @@MainCycle
     39
     40	011D  83 EE 01		     @@IterateI:     sub si, 1		     ; i--
     41	0120  2B D9				     sub bx, cx		     ; start vertically
     42	0122  2B D9				     sub bx, cx
     43	0124  81 C3 00A0			     add bx, 160d	     ; new line
     44
     45	0128  8B E9		     @@MainCycle:    mov bp, cx		     ; j = cx
     46
     47	012A  83 EB 02				     sub bx, 2		     ; bx -= 2 (then i += 2 to print)
     48	012D  EB 29 90				     jmp @@DrawV
     49
     50	0130  83 C3 02		     @@ContinueMain: add bx, 2		     ; bx += 2 (watch previous comment)
     51	0133  83 FE 00				     cmp si, 00h
     52	0136  74 2A				     je	@@Exit		     ; if i == 0: exit(0)
     53
     54	0138  83 FD 00		     @@SecondCycle:  cmp bp, 00h
     55	013B  74 20				     je	@@DrawRightV	     ; print left border (WORKS!)
     56
     57	013D  3B F7				     cmp si, di
Turbo Assembler	 Version 4.1	    02/14/23 23:56:13	    Page 2
ramka.asm



     58	013F  74 12				     je	@@DrawH		     ; draw highest border
     59
     60	0141  83 FE 01				     cmp si, 01h
     61	0144  74 0D				     je	@@DrawH		     ; draw lowest border
     62
     63	0146			     @@ContinueSecond:
     64	0146  83 FD 00				     cmp bp, 00h
     65	0149  74 D2				     je	@@IterateI	     ; if j == 0: i++
     66
     67	014B  83 ED 01				     sub bp, 1		     ; else: j--
     68	014E  83 C3 02				     add bx, 2		     ; bx += 2
     69	0151  EB E5				     jmp @@SecondCycle
     70
     71	0153  26: 89 07		     @@DrawH:	     mov es:[bx], ax
     72	0156  EB EE				     jmp @@ContinueSecond
     73
     74	0158  26: 89 17		     @@DrawV:	     mov es:[bx], dx
     75	015B  EB D3				     jmp @@ContinueMain
     76
     77	015D  26: 89 17		     @@DrawRightV:   mov es:[bx], dx
     78	0160  EB E4				     jmp @@ContinueSecond
     79
     80	0162  C3		     @@Exit:	     ret
     81	0163					     endp
     82
     83				     end     Start
Turbo Assembler	 Version 4.1	    02/14/23 23:56:13	    Page 3
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "02/14/23"
??FILENAME			  Text	 "ramka	  "
??TIME				  Text	 "23:56:13"
??VERSION			  Number 040A
@32BIT				  Text	 0
@@CONTINUEMAIN			  Near	 DGROUP:0130
@@CONTINUESECOND		  Near	 DGROUP:0146
@@DRAWH				  Near	 DGROUP:0153
@@DRAWRIGHTV			  Near	 DGROUP:015D
@@DRAWV				  Near	 DGROUP:0158
@@EXIT				  Near	 DGROUP:0162
@@ITERATEI			  Near	 DGROUP:011D
@@MAINCYCLE			  Near	 DGROUP:0128
@@SECONDCYCLE			  Near	 DGROUP:0138
@CODE				  Text	 DGROUP
@CODESIZE			  Text	 0
@CPU				  Text	 0101H
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 RAMKA
@INTERFACE			  Text	 000H
@MODEL				  Text	 1
@STACK				  Text	 DGROUP
@WORDSIZE			  Text	 2
DRAWRECT			  Near	 DGROUP:0118
START				  Near	 DGROUP:0100

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  _DATA				  16  0000 Word	  Public  DATA
  _TEXT				  16  0163 Word	  Public  CODE
