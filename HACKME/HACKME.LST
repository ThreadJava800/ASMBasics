Turbo Assembler	 Version 4.1	    03/11/23 23:14:40	    Page 1
hackme.asm



      1	0000			     .model tiny
      2
      3	      =0014		     MAX_PASS_LEN    equ 20d
      4	      =0007		     winTxtLen	     equ 7h
      5	      =002D		     err1TxtLen	     equ 45d
      6	      =002E		     err2TxtLen	     equ 46d
      7	      =0032		     err3TxtLen	     equ 50d
      8	      =002F		     err4TxtLen	     equ 47d
      9	      =0009		     err5TxtLen	     equ 9d
     10	      =0027		     err6TxtLen	     equ 39d
     11	      =002F		     err7TxtLen	     equ 47d
     12	      =003A		     err8TxtLen	     equ 58d
     13
     14	0000			     .data
     15
     16	0000  41 43 43 45 53 53	20+	 akiTxt:     db	'ACCESS	GRANTED$'
     17	      47 52 41 4E 54 45	44+
     18	      24
     19	000F  41 43 43 45 53 53	20+	 nopeTxt:    db	'ACCESS	DENIED$'
     20	      44 45 4E 49 45 44	24
     21
     22	001D  8157 8149	814E 8144 +	 winTxt:     dw	8157h, 8149h, 814eh, 8144h, 814fh, 8157h, 8153h
     23	      814F 8157	8153
     24	002B  41 20 31 36 2D 62	69+	 err1Txt:    db	'A 16-bit device driver	has corrupted critical'
     25	      74 20 64 65 76 69	63+
     26	      65 20 64 72 69 76	65+
     27	      72 20 68 61 73 20	63+
     28	      6F 72 72 75 70 74	65+
     29	      64 20 63 72 69 74	69+
     30	      63 61 6C
     31	0058  73 79 73 74 65 6D	20+	 err2Txt:    db	'system	memory,	resulting in an	exception 0D at'
     32	      6D 65 6D 6F 72 79	2C+
     33	      20 72 65 73 75 6C	74+
     34	      69 6E 67 20 69 6E	20+
     35	      61 6E 20 65 78 63	65+
     36	      70 74 69 6F 6E 20	30+
     37	      44 20 61 74
     38	0086  30 30 32 38 3A 38	30+	 err3Txt:    db	'0028:80001812 in VxD VMM(01) +	00001812. This was '
     39	      30 30 31 38 31 32	20+
     40	      69 6E 20 56 78 44	20+
     41	      56 4D 4D 28 30 31	29+
     42	      20 2B 20 30 30 30	30+
     43	      31 38 31 32 2E 20	54+
     44	      68 69 73 20 77 61	73+
     45	      20
     46	00B8  63 61 6C 6C 65 64	20+	 err4Txt:    db	'called	from 0028:80014C34 in VxD CONTOSO(03) +	'
     47	      66 72 6F 6D 20 30	30+
     48	      32 38 3A 38 30 30	31+
     49	      34 43 33 34 20 69	6E+
     50	      20 56 78 44 20 43	4F+
     51	      4E 54 4F 53 4F 28	30+
     52	      33 29 20 2B 20
     53	00E7  30 30 30 30 30 35	37+	 err5Txt:    db	'00000575.'
     54	      35 2E
     55	00F0  2A 20 50 72 65 73	73+	 err6Txt:    db	'* Press any key to attempt to continue.'
     56	      20 61 6E 79 20 6B	65+
     57	      79 20 74 6F 20 61	74+
Turbo Assembler	 Version 4.1	    03/11/23 23:14:40	    Page 2
hackme.asm



     58	      74 65 6D 70 74 20	74+
     59	      6F 20 63 6F 6E 74	69+
     60	      6E 75 65 2E
     61	0117  2A 20 50 72 65 73	73+	 err7Txt:    db	'* Press CTRL+ALT+DEL to restart your computer.	'
     62	      20 43 54 52 4C 2B	41+
     63	      4C 54 2B 44 45 4C	20+
     64	      74 6F 20 72 65 73	74+
     65	      61 72 74 20 79 6F	75+
     66	      72 20 63 6F 6D 70	75+
     67	      74 65 72 2E 20
     68	0146  59 6F 75 20 77 69	6C+	 err8Txt:    db	'You will lose any unsaved information in all applications.'
     69	      6C 20 6C 6F 73 65	20+
     70	      61 6E 79 20 75 6E	73+
     71	      61 76 65 64 20 69	6E+
     72	      66 6F 72 6D 61 74	69+
     73	      6F 6E 20 69 6E 20	61+
     74	      6C 6C 20 61 70 70	6C+
     75	      69 63 61 74 69 6F	6E+
     76	      73 2E
     77
     78	0180			     .code
     79
     80				     org 100h
     81
     82				     locals @@
     83
     84	0100			     Start:
     85	0100  E8 0004				     call ReadPass
     86	0103  E8 0021				     call ComparePass
     87
     88	0106  C3				     ret
     89
     90				     ;-------------------------------------------------------------------------------
     91				     ; Reads string password from keyboard
     92				     ;-------------------------------------------------------------------------------
     93				     ; Entry:	 None
     94				     ; Expects:	 MAX_PASS_LEN
     95				     ; Exit:	 userPass
     96				     ; Destroys: AX, CX, DI
     97				     ;-------------------------------------------------------------------------------
     98	0107			     ReadPass	     proc
     99	0107  B9 0014				     mov cx, MAX_PASS_LEN
    100	010A  BF 0207r				     lea di, userPass
    101
    102	010D  B4 01		     @@Loop:	     mov ah, 01h
    103	010F  CD 21				     int 21h		     ; char -> al
    104
    105	0111  3C 0D				     cmp al, 0Dh
    106	0113  74 0E				     je	@@Exit
    107
    108	0115  3C 13				     cmp al, 13h
    109	0117  74 0A				     je	@@Exit		     ; if al ==	'\n' ||	'\r': return
    110
    111	0119  88 05				     mov [di], al
    112	011B  47				     inc di
    113
    114	011C  83 F9 00				     cmp cx, 00h
Turbo Assembler	 Version 4.1	    03/11/23 23:14:40	    Page 3
hackme.asm



    115	011F  EB EC				     jmp @@Loop
    116	0121  74 EA				     je	@@Loop
    117
    118
    119
    120	0123  C6 05 24		     @@Exit:	     mov byte ptr [di],	'$'
    121	0126  C3				     ret
    122	0127					     endp
    123				     ;-------------------------------------------------------------------------------
    124
    125				     ;-------------------------------------------------------------------------------
    126				     ; Reads string password from keyboard
    127				     ;-------------------------------------------------------------------------------
    128				     ; Entry:	 None
    129				     ; Expects:	 pass, userPass
    130				     ; Exit:	 None
    131				     ; Destroys: AX, BX, CX, DX, DI, SI
    132				     ;-------------------------------------------------------------------------------
    133	0127			     ComparePass     proc
    134	0127  55				     push bp
    135
    136	0128  BF 0223r				     lea di, pass
    137	012B  BE 0207r				     lea si, userPass
    138
    139	012E  B9 0016				     mov cx, MAX_PASS_LEN + 2	 ; setting up iterator
    140	0131  33 ED				     xor bp, bp			 ; bp =	0 (7th counter)
    141
    142	0133  8A 3D		     @@Loop:	     mov bh, [di]		 ; etalon
    143	0135  8A 04				     mov al, [si]		 ; user	input
    144
    145	0137  80 FF 24				     cmp bh, '$'
    146	013A  74 26				     je	@@EtalonEnd		 ; if etalon ended: check user input
    147
    148	013C  3C 24				     cmp al, '$'
    149	013E  74 33				     je	@@Nope			 ; if userInput	ended: nope
    150
    151	0140  50				     push ax
    152	0141  53				     push bx
    153
    154	0142  32 E4				     xor ah, ah			 ; ah =	0
    155	0144  B3 07				     mov bl, 7h
    156	0146  F6 F3				     div bl			 ; ah =	%
    157
    158	0148  80 FC 00				     cmp ah, 00h
    159	014B  75 0B				     jne @@Continue		     ; if % != 0: leave
    160
    161	014D  45				     inc bp
    162	014E  83 FD 03				     cmp bp, 3d
    163	0151  74 16				     je	@@Aki			; if everythin is ok then aki
    164	0153  EB 09 90				     jmp @@SkipCheck
    165
    166	0156  72 1B				     jb	@@Nope			 ; just	to interrupt opponent
    167
    168	0158  5B		     @@Continue:     pop bx
    169	0159  58				     pop ax
    170
    171	015A  3A F8				     cmp bh, al
Turbo Assembler	 Version 4.1	    03/11/23 23:14:40	    Page 4
hackme.asm



    172	015C  75 15				     jne @@Nope			 ; if symbols are not the same:	nope
    173
    174	015E  47		     @@SkipCheck:    inc di
    175	015F  46				     inc si			 ; etalon++, userInput++
    176	0160  E2 D1				     loop @@Loop		 ; iterate
    177
    178	0162  3C 24		     @@EtalonEnd:    cmp al, '$'
    179	0164  74 03				     je	 @@Aki
    180	0166  EB 0B 90				     jmp @@Nope			 ; if userInput	end: aki else nope
    181
    182	0169  B4 09		     @@Aki:	     mov ah, 09h
    183	016B  BA 0000r				     lea dx, akiTxt
    184	016E  CD 21				     int 21h			 ; print access	granted
    185
    186	0170  5D				     pop bp
    187	0171  CD 20				     int 20h
    188
    189	0173  5D		     @@Nope:	     pop bp
    190
    191	0174  E8 0002				     call DrawBsod		    ; print access denied
    192	0177  CD 20				     int 20h
    193				     ; @@Rep:	       jmp @@Rep
    194	0179					     endp
    195				     ;-------------------------------------------------------------------------------
    196
    197	0179			     DrawBsod	     proc
    198
    199	0179  B4 06				     mov ah, 06h
    200	017B  32 C0				     xor al, al	    ; clean all	screen
    201	017D  33 C9				     xor cx, cx	    ; left higher
    202	017F  BA 184F				     mov dx, 184fh  ; right lower (dh =	row, dl	= column)
    203	0182  B7 11				     mov bh, 11h    ; how to replace
    204	0184  CD 10				     int 10h
    205
    206	0186  B8 1003				     mov ax, 1003h
    207	0189  B3 00				     mov bl, 00h
    208	018B  CD 10				     int 10h	     ; switch off blinking
    209
    210	018D  BF B800				     mov di, 0b800h
    211	0190  8E C7				     mov es, di
    212
    213	0192  B9 0007				     mov cx, winTxtLen
    214	0195  BE 001Dr				     lea si, winTxt
    215	0198  BF 04A8				     mov di, 7d	* 160d + 72d	     ; printing	windows	in center
    216
    217	019B  AD		     @@Loop:	     lodsw
    218	019C  AB				     stosw
    219	019D  E2 FC				     loop @@Loop
    220
    221	019F  B9 002D				     mov cx, err1TxtLen
    222	01A2  BE 002Br				     lea si, err1Txt
    223	01A5  BF 064A				     mov di, 10d * 160d	+ 10d
    224	01A8  E8 0055				     call PrintText
    225
    226	01AB  B9 002E				     mov cx, err2TxtLen
    227	01AE  BE 0058r				     lea si, err2Txt
    228	01B1  BF 06EA				     mov di, 11d * 160d	+ 10d
Turbo Assembler	 Version 4.1	    03/11/23 23:14:40	    Page 5
hackme.asm



    229	01B4  E8 0049				     call PrintText
    230
    231	01B7  B9 0032				     mov cx, err3TxtLen
    232	01BA  BE 0086r				     lea si, err3Txt
    233	01BD  BF 078A				     mov di, 12d * 160d	+ 10d
    234	01C0  E8 003D				     call PrintText
    235
    236	01C3  B9 002F				     mov cx, err4TxtLen
    237	01C6  BE 00B8r				     lea si, err4Txt
    238	01C9  BF 082A				     mov di, 13d * 160d	+ 10d
    239	01CC  E8 0031				     call PrintText
    240
    241	01CF  B9 0009				     mov cx, err5TxtLen
    242	01D2  BE 00E7r				     lea si, err5Txt
    243	01D5  BF 08CA				     mov di, 14d * 160d	+ 10d
    244	01D8  E8 0025				     call PrintText
    245
    246	01DB  B9 0027				     mov cx, err6TxtLen
    247	01DE  BE 00F0r				     lea si, err6Txt
    248	01E1  BF 0A0A				     mov di, 16d * 160d	+ 10d
    249	01E4  E8 0019				     call PrintText
    250
    251	01E7  B9 002F				     mov cx, err7TxtLen
    252	01EA  BE 0117r				     lea si, err7Txt
    253	01ED  BF 0AAA				     mov di, 17d * 160d	+ 10d
    254	01F0  E8 000D				     call PrintText
    255
    256	01F3  B9 003A				     mov cx, err8TxtLen
    257	01F6  BE 0146r				     lea si, err8Txt
    258	01F9  BF 0B4A				     mov di, 18d * 160d	+ 10d
    259	01FC  E8 0001				     call PrintText
    260
    261	01FF  C3				     ret
    262	0200					     endp
    263
    264
    265	0200			     PrintText	     proc
    266
    267	0200  B4 17				     mov ah, 00010111b		    ; ah = white
    268
    269	0202  AC		     @@Loop:	     lodsb	     ; ds:si ->	al
    270	0203  AB				     stosw
    271	0204  E2 FC				     loop @@Loop
    272
    273	0206  C3				     ret
    274	0207					     endp
    275
    276	0207  16*(00)		     userPass:	 db MAX_PASS_LEN + 2 dup(0)
    277	021D  05FF 1236	0912	     buf:	 dw 05ffh, 1236h, 0912h
    278	0223  33 34 37 36 4A 44	46+  pass:	 db '3476JDF17$'
    279	      31 37 24
    280
    281				     end     Start
Turbo Assembler	 Version 4.1	    03/11/23 23:14:40	    Page 6
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "03/11/23"
??FILENAME			  Text	 "hackme  "
??TIME				  Text	 "23:14:40"
??VERSION			  Number 040A
@32BIT				  Text	 0
@@AKI				  Near	 DGROUP:0169
@@CONTINUE			  Near	 DGROUP:0158
@@ETALONEND			  Near	 DGROUP:0162
@@EXIT				  Near	 DGROUP:0123
@@LOOP				  Near	 DGROUP:010D
@@LOOP				  Near	 DGROUP:0133
@@LOOP				  Near	 DGROUP:019B
@@LOOP				  Near	 DGROUP:0202
@@NOPE				  Near	 DGROUP:0173
@@SKIPCHECK			  Near	 DGROUP:015E
@CODE				  Text	 DGROUP
@CODESIZE			  Text	 0
@CPU				  Text	 0101H
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 HACKME
@INTERFACE			  Text	 000H
@MODEL				  Text	 1
@STACK				  Text	 DGROUP
@WORDSIZE			  Text	 2
AKITXT				  Near	 DGROUP:0000
BUF				  Near	 DGROUP:021D
COMPAREPASS			  Near	 DGROUP:0127
DRAWBSOD			  Near	 DGROUP:0179
ERR1TXT				  Near	 DGROUP:002B
ERR1TXTLEN			  Number 002D
ERR2TXT				  Near	 DGROUP:0058
ERR2TXTLEN			  Number 002E
ERR3TXT				  Near	 DGROUP:0086
ERR3TXTLEN			  Number 0032
ERR4TXT				  Near	 DGROUP:00B8
ERR4TXTLEN			  Number 002F
ERR5TXT				  Near	 DGROUP:00E7
ERR5TXTLEN			  Number 0009
ERR6TXT				  Near	 DGROUP:00F0
ERR6TXTLEN			  Number 0027
ERR7TXT				  Near	 DGROUP:0117
ERR7TXTLEN			  Number 002F
ERR8TXT				  Near	 DGROUP:0146
ERR8TXTLEN			  Number 003A
MAX_PASS_LEN			  Number 0014
NOPETXT				  Near	 DGROUP:000F
PASS				  Near	 DGROUP:0223
PRINTTEXT			  Near	 DGROUP:0200
READPASS			  Near	 DGROUP:0107
START				  Near	 DGROUP:0100
USERPASS			  Near	 DGROUP:0207
WINTXT				  Near	 DGROUP:001D
Turbo Assembler	 Version 4.1	    03/11/23 23:14:40	    Page 7
Symbol Table



WINTXTLEN			  Number 0007

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  _DATA				  16  0180 Word	  Public  DATA
  _TEXT				  16  022D Word	  Public  CODE
