Turbo Assembler	 Version 4.1	    03/09/23 00:51:48	    Page 1
hackme.asm



      1	0000			     .model tiny
      2
      3	      =0014		     MAX_PASS_LEN    equ 20d
      4	      =0007		     winTxtLen	     equ 7h
      5	      =002D		     err1TxtLen	     equ 45d
      6	      =002E		     err2TxtLen	     equ 46d
      7	      =0032		     err3TxtLen	     equ 50d
      8	      =002F		     err4TxtLen	     equ 47d
      9	      =0009		     err5TxtLen	     equ 9d
     10	      =0027		     err6TxtLen	     equ 39d
     11	      =002F		     err7TxtLen	     equ 47d
     12	      =003A		     err8TxtLen	     equ 58d
     13
     14	0000			     .data
     15
     16	0000  41 43 43 45 53 53	20+	 akiTxt:     db	'ACCESS	GRANTED$'
     17	      47 52 41 4E 54 45	44+
     18	      24
     19	000F  41 43 43 45 53 53	20+	 nopeTxt:    db	'ACCESS	DENIED$'
     20	      44 45 4E 49 45 44	24
     21
     22	001D  8157 8149	814E 8144 +	 winTxt:     dw	8157h, 8149h, 814eh, 8144h, 814fh, 8157h, 8153h
     23	      814F 8157	8153
     24	002B  41 20 31 36 2D 62	69+	 err1Txt:    db	'A 16-bit device driver	has corrupted critical'
     25	      74 20 64 65 76 69	63+
     26	      65 20 64 72 69 76	65+
     27	      72 20 68 61 73 20	63+
     28	      6F 72 72 75 70 74	65+
     29	      64 20 63 72 69 74	69+
     30	      63 61 6C
     31	0058  73 79 73 74 65 6D	20+	 err2Txt:    db	'system	memory,	resulting in an	exception 0D at'
     32	      6D 65 6D 6F 72 79	2C+
     33	      20 72 65 73 75 6C	74+
     34	      69 6E 67 20 69 6E	20+
     35	      61 6E 20 65 78 63	65+
     36	      70 74 69 6F 6E 20	30+
     37	      44 20 61 74
     38	0086  30 30 32 38 3A 38	30+	 err3Txt:    db	'0028:80001812 in VxD VMM(01) +	00001812. This was '
     39	      30 30 31 38 31 32	20+
     40	      69 6E 20 56 78 44	20+
     41	      56 4D 4D 28 30 31	29+
     42	      20 2B 20 30 30 30	30+
     43	      31 38 31 32 2E 20	54+
     44	      68 69 73 20 77 61	73+
     45	      20
     46	00B8  63 61 6C 6C 65 64	20+	 err4Txt:    db	'called	from 0028:80014C34 in VxD CONTOSO(03) +	'
     47	      66 72 6F 6D 20 30	30+
     48	      32 38 3A 38 30 30	31+
     49	      34 43 33 34 20 69	6E+
     50	      20 56 78 44 20 43	4F+
     51	      4E 54 4F 53 4F 28	30+
     52	      33 29 20 2B 20
     53	00E7  30 30 30 30 30 35	37+	 err5Txt:    db	'00000575.'
     54	      35 2E
     55	00F0  2A 20 50 72 65 73	73+	 err6Txt:    db	'* Press any key to attempt to continue.'
     56	      20 61 6E 79 20 6B	65+
     57	      79 20 74 6F 20 61	74+
Turbo Assembler	 Version 4.1	    03/09/23 00:51:48	    Page 2
hackme.asm



     58	      74 65 6D 70 74 20	74+
     59	      6F 20 63 6F 6E 74	69+
     60	      6E 75 65 2E
     61	0117  2A 20 50 72 65 73	73+	 err7Txt:    db	'* Press CTRL+ALT+DEL to restart your computer.	'
     62	      20 43 54 52 4C 2B	41+
     63	      4C 54 2B 44 45 4C	20+
     64	      74 6F 20 72 65 73	74+
     65	      61 72 74 20 79 6F	75+
     66	      72 20 63 6F 6D 70	75+
     67	      74 65 72 2E 20
     68	0146  59 6F 75 20 77 69	6C+	 err8Txt:    db	'You will lose any unsaved information in all applications.'
     69	      6C 20 6C 6F 73 65	20+
     70	      61 6E 79 20 75 6E	73+
     71	      61 76 65 64 20 69	6E+
     72	      66 6F 72 6D 61 74	69+
     73	      6F 6E 20 69 6E 20	61+
     74	      6C 6C 20 61 70 70	6C+
     75	      69 63 61 74 69 6F	6E+
     76	      73 2E
     77
     78	0180			     .code
     79
     80				     org 100h
     81
     82				     locals @@
     83
     84	0100			     Start:
     85	0100  E8 0004				     call ReadPass
     86	0103  E8 0019				     call ComparePass
     87
     88	0106  C3				     ret
     89
     90				     ;-------------------------------------------------------------------------------
     91				     ; Reads string password from keyboard
     92				     ;-------------------------------------------------------------------------------
     93				     ; Entry:	 None
     94				     ; Expects:	 MAX_PASS_LEN
     95				     ; Exit:	 userPass
     96				     ; Destroys: AX, CX, DI
     97				     ;-------------------------------------------------------------------------------
     98	0107			     ReadPass	     proc
     99	0107  BF 01FDr				     lea di, userPass
    100
    101	010A  B4 01		     @@Loop:	     mov ah, 01h
    102	010C  CD 21				     int 21h		     ; char -> al
    103
    104	010E  3C 0D				     cmp al, 0Dh
    105	0110  74 09				     je	@@Exit
    106
    107	0112  3C 13				     cmp al, 13h
    108	0114  74 05				     je	@@Exit		     ; if al ==	'\n' ||	'\r': return
    109
    110	0116  88 05				     mov [di], al
    111	0118  47				     inc di
    112	0119  EB EF				     jmp @@Loop
    113
    114
Turbo Assembler	 Version 4.1	    03/09/23 00:51:48	    Page 3
hackme.asm



    115	011B  C6 05 24		     @@Exit:	     mov byte ptr [di],	'$'
    116	011E  C3				     ret
    117	011F					     endp
    118				     ;-------------------------------------------------------------------------------
    119
    120				     ;-------------------------------------------------------------------------------
    121				     ; Reads string password from keyboard
    122				     ;-------------------------------------------------------------------------------
    123				     ; Entry:	 None
    124				     ; Expects:	 pass, userPass
    125				     ; Exit:	 None
    126				     ; Destroys: AX, BX, CX, DX, DI, SI
    127				     ;-------------------------------------------------------------------------------
    128	011F			     ComparePass     proc
    129	011F  55				     push bp
    130
    131	0120  BF 0213r				     lea di, pass
    132	0123  BE 01FDr				     lea si, userPass
    133
    134	0126  B9 0016				     mov cx, MAX_PASS_LEN + 2	 ; setting up iterator
    135	0129  33 ED				     xor bp, bp			 ; bp =	0 (7th counter)
    136
    137	012B  8A 3D		     @@Loop:	     mov bh, [di]		 ; etalon
    138	012D  8A 04				     mov al, [si]		 ; user	input
    139
    140	012F  80 FF 24				     cmp bh, '$'
    141	0132  74 24				     je	@@EtalonEnd		 ; if etalon ended: check user input
    142
    143	0134  3C 24				     cmp al, '$'
    144	0136  74 31				     je	@@Nope			 ; if userInput	ended: nope
    145
    146	0138  50				     push ax
    147	0139  53				     push bx
    148
    149	013A  32 E4				     xor ah, ah			 ; ah =	0
    150	013C  B3 07				     mov bl, 7h
    151	013E  F6 F3				     div bl			 ; ah =	%
    152
    153	0140  80 FC 00				     cmp ah, 00h
    154	0143  75 09				     jne @@Continue		     ; if % != 0: leave
    155
    156	0145  45				     inc bp
    157	0146  83 FD 03				     cmp bp, 3d
    158	0149  74 14				     je	@@Aki			; if everythin is ok then aki
    159	014B  EB 07 90				     jmp @@SkipCheck
    160
    161	014E  5B		     @@Continue:     pop bx
    162	014F  58				     pop ax
    163
    164	0150  3A F8				     cmp bh, al
    165	0152  75 15				     jne @@Nope			 ; if symbols are not the same:	nope
    166
    167	0154  47		     @@SkipCheck:    inc di
    168	0155  46				     inc si			 ; etalon++, userInput++
    169	0156  E2 D3				     loop @@Loop		 ; iterate
    170
    171	0158  3C 24		     @@EtalonEnd:    cmp al, '$'
Turbo Assembler	 Version 4.1	    03/09/23 00:51:48	    Page 4
hackme.asm



    172	015A  74 03				     je	 @@Aki
    173	015C  EB 0B 90				     jmp @@Nope			 ; if userInput	end: aki else nope
    174
    175	015F  B4 09		     @@Aki:	     mov ah, 09h
    176	0161  BA 0000r				     lea dx, akiTxt
    177	0164  CD 21				     int 21h			 ; print access	granted
    178
    179	0166  5D				     pop bp
    180	0167  CD 20				     int 20h
    181
    182	0169  5D		     @@Nope:	     pop bp
    183
    184	016A  E8 0002				     call DrawBsod		    ; print access denied
    185	016D  CD 20				     int 20h
    186	016F					     endp
    187				     ;-------------------------------------------------------------------------------
    188
    189	016F			     DrawBsod	     proc
    190
    191	016F  B4 06				     mov ah, 06h
    192	0171  32 C0				     xor al, al	    ; clean all	screen
    193	0173  33 C9				     xor cx, cx	    ; left higher
    194	0175  BA 184F				     mov dx, 184fh  ; right lower (dh =	row, dl	= column)
    195	0178  B7 1E				     mov bh, 1Eh    ; how to replace
    196	017A  CD 10				     int 10h
    197
    198	017C  B8 1003				     mov ax, 1003h
    199	017F  B3 00				     mov bl, 00h
    200	0181  CD 10				     int 10h	     ; switch off blinking
    201
    202	0183  BF B800				     mov di, 0b800h
    203	0186  8E C7				     mov es, di
    204
    205	0188  B9 0007				     mov cx, winTxtLen
    206	018B  BE 001Dr				     lea si, winTxt
    207	018E  BF 04A8				     mov di, 7d	* 160d + 72d	     ; printing	windows	in center
    208
    209	0191  AD		     @@Loop:	     lodsw
    210	0192  AB				     stosw
    211	0193  E2 FC				     loop @@Loop
    212
    213	0195  B9 002D				     mov cx, err1TxtLen
    214	0198  BE 002Br				     lea si, err1Txt
    215	019B  BF 064A				     mov di, 10d * 160d	+ 10d
    216	019E  E8 0055				     call PrintText
    217
    218	01A1  B9 002E				     mov cx, err2TxtLen
    219	01A4  BE 0058r				     lea si, err2Txt
    220	01A7  BF 06EA				     mov di, 11d * 160d	+ 10d
    221	01AA  E8 0049				     call PrintText
    222
    223	01AD  B9 0032				     mov cx, err3TxtLen
    224	01B0  BE 0086r				     lea si, err3Txt
    225	01B3  BF 078A				     mov di, 12d * 160d	+ 10d
    226	01B6  E8 003D				     call PrintText
    227
    228	01B9  B9 002F				     mov cx, err4TxtLen
Turbo Assembler	 Version 4.1	    03/09/23 00:51:48	    Page 5
hackme.asm



    229	01BC  BE 00B8r				     lea si, err4Txt
    230	01BF  BF 082A				     mov di, 13d * 160d	+ 10d
    231	01C2  E8 0031				     call PrintText
    232
    233	01C5  B9 0009				     mov cx, err5TxtLen
    234	01C8  BE 00E7r				     lea si, err5Txt
    235	01CB  BF 08CA				     mov di, 14d * 160d	+ 10d
    236	01CE  E8 0025				     call PrintText
    237
    238	01D1  B9 0027				     mov cx, err6TxtLen
    239	01D4  BE 00F0r				     lea si, err6Txt
    240	01D7  BF 0A0A				     mov di, 16d * 160d	+ 10d
    241	01DA  E8 0019				     call PrintText
    242
    243	01DD  B9 002F				     mov cx, err7TxtLen
    244	01E0  BE 0117r				     lea si, err7Txt
    245	01E3  BF 0AAA				     mov di, 17d * 160d	+ 10d
    246	01E6  E8 000D				     call PrintText
    247
    248	01E9  B9 003A				     mov cx, err8TxtLen
    249	01EC  BE 0146r				     lea si, err8Txt
    250	01EF  BF 0B4A				     mov di, 18d * 160d	+ 10d
    251	01F2  E8 0001				     call PrintText
    252
    253	01F5  C3				     ret
    254	01F6					     endp
    255
    256
    257	01F6			     PrintText	     proc
    258
    259	01F6  B4 17				     mov ah, 00010111b		    ; ah = white
    260
    261	01F8  AC		     @@Loop:	     lodsb	     ; ds:si ->	al
    262	01F9  AB				     stosw
    263	01FA  E2 FC				     loop @@Loop
    264
    265	01FC  C3				     ret
    266	01FD					     endp
    267
    268	01FD  16*(00)		     userPass:	 db MAX_PASS_LEN + 2 dup(0)
    269	0213  33 34 37 36 4A 44	46+  pass:	 db '3476JDF17$'
    270	      31 37 24
    271
    272				     end     Start
Turbo Assembler	 Version 4.1	    03/09/23 00:51:48	    Page 6
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "03/09/23"
??FILENAME			  Text	 "hackme  "
??TIME				  Text	 "00:51:47"
??VERSION			  Number 040A
@32BIT				  Text	 0
@@AKI				  Near	 DGROUP:015F
@@CONTINUE			  Near	 DGROUP:014E
@@ETALONEND			  Near	 DGROUP:0158
@@EXIT				  Near	 DGROUP:011B
@@LOOP				  Near	 DGROUP:010A
@@LOOP				  Near	 DGROUP:012B
@@LOOP				  Near	 DGROUP:0191
@@LOOP				  Near	 DGROUP:01F8
@@NOPE				  Near	 DGROUP:0169
@@SKIPCHECK			  Near	 DGROUP:0154
@CODE				  Text	 DGROUP
@CODESIZE			  Text	 0
@CPU				  Text	 0101H
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 HACKME
@INTERFACE			  Text	 000H
@MODEL				  Text	 1
@STACK				  Text	 DGROUP
@WORDSIZE			  Text	 2
AKITXT				  Near	 DGROUP:0000
COMPAREPASS			  Near	 DGROUP:011F
DRAWBSOD			  Near	 DGROUP:016F
ERR1TXT				  Near	 DGROUP:002B
ERR1TXTLEN			  Number 002D
ERR2TXT				  Near	 DGROUP:0058
ERR2TXTLEN			  Number 002E
ERR3TXT				  Near	 DGROUP:0086
ERR3TXTLEN			  Number 0032
ERR4TXT				  Near	 DGROUP:00B8
ERR4TXTLEN			  Number 002F
ERR5TXT				  Near	 DGROUP:00E7
ERR5TXTLEN			  Number 0009
ERR6TXT				  Near	 DGROUP:00F0
ERR6TXTLEN			  Number 0027
ERR7TXT				  Near	 DGROUP:0117
ERR7TXTLEN			  Number 002F
ERR8TXT				  Near	 DGROUP:0146
ERR8TXTLEN			  Number 003A
MAX_PASS_LEN			  Number 0014
NOPETXT				  Near	 DGROUP:000F
PASS				  Near	 DGROUP:0213
PRINTTEXT			  Near	 DGROUP:01F6
READPASS			  Near	 DGROUP:0107
START				  Near	 DGROUP:0100
USERPASS			  Near	 DGROUP:01FD
WINTXT				  Near	 DGROUP:001D
WINTXTLEN			  Number 0007
Turbo Assembler	 Version 4.1	    03/09/23 00:51:48	    Page 7
Symbol Table




Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  _DATA				  16  0180 Word	  Public  DATA
  _TEXT				  16  021D Word	  Public  CODE
