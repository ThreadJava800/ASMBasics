Turbo Assembler	 Version 4.1	    03/08/23 23:20:54	    Page 1
hackme.asm



      1	0000			     .model tiny
      2
      3	      =0014		     MAX_PASS_LEN    equ 20d
      4	      =0007		     winTxtLen	     equ 7h
      5	      =002D		     err1TxtLen	     equ 45d
      6	      =002E		     err2TxtLen	     equ 46d
      7	      =0032		     err3TxtLen	     equ 50d
      8	      =002F		     err4TxtLen	     equ 47d
      9	      =0009		     err5TxtLen	     equ 9d
     10	      =0027		     err6TxtLen	     equ 39d
     11	      =002F		     err7TxtLen	     equ 47d
     12	      =003A		     err8TxtLen	     equ 58d
     13
     14	0000			     .data
     15	0000  31 32 33 34 35 36	37+	 pass:	     db	'12345678912345678912$'
     16	      38 39 31 32 33 34	35+
     17	      36 37 38 39 31 32	24
     18	0015  16*(00)			 userPass:   db	MAX_PASS_LEN + 2 dup(0)
     19
     20	002B  41 43 43 45 53 53	20+	 akiTxt:     db	'ACCESS	GRANTED$'
     21	      47 52 41 4E 54 45	44+
     22	      24
     23	003A  41 43 43 45 53 53	20+	 nopeTxt:    db	'ACCESS	DENIED$'
     24	      44 45 4E 49 45 44	24
     25
     26	0048  8157 8149	814E 8144 +	 winTxt:     dw	8157h, 8149h, 814eh, 8144h, 814fh, 8157h, 8153h
     27	      814F 8157	8153
     28	0056  41 20 31 36 2D 62	69+	 err1Txt:    db	'A 16-bit device driver	has corrupted critical'
     29	      74 20 64 65 76 69	63+
     30	      65 20 64 72 69 76	65+
     31	      72 20 68 61 73 20	63+
     32	      6F 72 72 75 70 74	65+
     33	      64 20 63 72 69 74	69+
     34	      63 61 6C
     35	0083  73 79 73 74 65 6D	20+	 err2Txt:    db	'system	memory,	resulting in an	exception 0D at'
     36	      6D 65 6D 6F 72 79	2C+
     37	      20 72 65 73 75 6C	74+
     38	      69 6E 67 20 69 6E	20+
     39	      61 6E 20 65 78 63	65+
     40	      70 74 69 6F 6E 20	30+
     41	      44 20 61 74
     42	00B1  30 30 32 38 3A 38	30+	 err3Txt:    db	'0028:80001812 in VxD VMM(01) +	00001812. This was '
     43	      30 30 31 38 31 32	20+
     44	      69 6E 20 56 78 44	20+
     45	      56 4D 4D 28 30 31	29+
     46	      20 2B 20 30 30 30	30+
     47	      31 38 31 32 2E 20	54+
     48	      68 69 73 20 77 61	73+
     49	      20
     50	00E3  63 61 6C 6C 65 64	20+	 err4Txt:    db	'called	from 0028:80014C34 in VxD CONTOSO(03) +	'
     51	      66 72 6F 6D 20 30	30+
     52	      32 38 3A 38 30 30	31+
     53	      34 43 33 34 20 69	6E+
     54	      20 56 78 44 20 43	4F+
     55	      4E 54 4F 53 4F 28	30+
     56	      33 29 20 2B 20
     57	0112  30 30 30 30 30 35	37+	 err5Txt:    db	'00000575.'
Turbo Assembler	 Version 4.1	    03/08/23 23:20:54	    Page 2
hackme.asm



     58	      35 2E
     59	011B  2A 20 50 72 65 73	73+	 err6Txt:    db	'* Press any key to attempt to continue.'
     60	      20 61 6E 79 20 6B	65+
     61	      79 20 74 6F 20 61	74+
     62	      74 65 6D 70 74 20	74+
     63	      6F 20 63 6F 6E 74	69+
     64	      6E 75 65 2E
     65	0142  2A 20 50 72 65 73	73+	 err7Txt:    db	'* Press CTRL+ALT+DEL to restart your computer.	'
     66	      20 43 54 52 4C 2B	41+
     67	      4C 54 2B 44 45 4C	20+
     68	      74 6F 20 72 65 73	74+
     69	      61 72 74 20 79 6F	75+
     70	      72 20 63 6F 6D 70	75+
     71	      74 65 72 2E 20
     72	0171  59 6F 75 20 77 69	6C+	 err8Txt:    db	'You will lose any unsaved information in all applications.'
     73	      6C 20 6C 6F 73 65	20+
     74	      61 6E 79 20 75 6E	73+
     75	      61 76 65 64 20 69	6E+
     76	      66 6F 72 6D 61 74	69+
     77	      6F 6E 20 69 6E 20	61+
     78	      6C 6C 20 61 70 70	6C+
     79	      69 63 61 74 69 6F	6E+
     80	      73 2E
     81	01AB			     .code
     82
     83				     org 100h
     84
     85				     locals @@
     86
     87	0100			     Start:
     88	0100  E8 0004				     call ReadPass
     89	0103  E8 001C				     call ComparePass
     90
     91	0106  C3				     ret
     92
     93				     ;-------------------------------------------------------------------------------
     94				     ; Reads string password from keyboard
     95				     ;-------------------------------------------------------------------------------
     96				     ; Entry:	 None
     97				     ; Expects:	 MAX_PASS_LEN
     98				     ; Exit:	 userPass
     99				     ; Destroys: AX, CX, DI
    100				     ;-------------------------------------------------------------------------------
    101	0107			     ReadPass	     proc
    102	0107  B9 0014				     mov cx, MAX_PASS_LEN
    103	010A  BF 0015r				     lea di, userPass
    104
    105	010D  B4 01		     @@Loop:	     mov ah, 01h
    106	010F  CD 21				     int 21h		     ; char -> al
    107
    108	0111  3C 0D				     cmp al, 0Dh
    109	0113  74 09				     je	@@Exit
    110
    111	0115  3C 13				     cmp al, 13h
    112	0117  74 05				     je	@@Exit		     ; if al ==	'\n' ||	'\r': return
    113
    114	0119  88 05				     mov [di], al
Turbo Assembler	 Version 4.1	    03/08/23 23:20:54	    Page 3
hackme.asm



    115	011B  47				     inc di
    116	011C  E2 EF				     loop @@Loop
    117
    118
    119	011E  C6 05 24		     @@Exit:	     mov byte ptr [di],	'$'
    120	0121  C3				     ret
    121	0122					     endp
    122				     ;-------------------------------------------------------------------------------
    123
    124				     ;-------------------------------------------------------------------------------
    125				     ; Reads string password from keyboard
    126				     ;-------------------------------------------------------------------------------
    127				     ; Entry:	 None
    128				     ; Expects:	 pass, userPass
    129				     ; Exit:	 None
    130				     ; Destroys: AX, CX, DX, DI, SI
    131				     ;-------------------------------------------------------------------------------
    132	0122			     ComparePass     proc
    133
    134	0122  BF 0000r				     lea di, pass
    135	0125  BE 0015r				     lea si, userPass
    136
    137	0128  B9 0016				     mov cx, MAX_PASS_LEN + 2	 ; setting up iterator
    138
    139	012B  8A 05		     @@Loop:	     mov al, [di]		 ; etalon
    140	012D  8A 24				     mov ah, [si]		 ; user	input
    141
    142	012F  3C 24				     cmp al, '$'
    143	0131  74 0D				     je	@@EtalonEnd		 ; if etalon ended: check user input
    144
    145	0133  80 FC 24				     cmp ah, '$'
    146	0136  74 18				     je	@@Nope			 ; if userInput	ended: nope
    147
    148	0138  3A E0				     cmp ah, al
    149	013A  75 14				     jne @@Nope			 ; if symbols are not the same:	nope
    150
    151	013C  47				     inc di
    152	013D  46				     inc si			 ; etalon++, userInput++
    153	013E  E2 EB				     loop @@Loop		 ; iterate
    154
    155	0140  80 FC 24		     @@EtalonEnd:    cmp ah, '$'
    156	0143  74 03				     je	 @@Aki
    157	0145  EB 09 90				     jmp @@Nope			 ; if userInput	end: aki else nope
    158
    159	0148  B4 09		     @@Aki:	     mov ah, 09h
    160	014A  BA 002Br				     lea dx, akiTxt
    161	014D  CD 21				     int 21h			 ; print access	granted
    162	014F  C3				     ret
    163
    164	0150  E8 0001		     @@Nope:	     call DrawBsod		    ; print access denied
    165	0153  C3				     ret
    166	0154					     endp
    167				     ;-------------------------------------------------------------------------------
    168
    169	0154			     DrawBsod	     proc
    170
    171	0154  B4 06				     mov ah, 06h
Turbo Assembler	 Version 4.1	    03/08/23 23:20:54	    Page 4
hackme.asm



    172	0156  32 C0				     xor al, al	    ; clean all	screen
    173	0158  33 C9				     xor cx, cx	    ; left higher
    174	015A  BA 184F				     mov dx, 184fh  ; right lower (dh =	row, dl	= column)
    175	015D  B7 1E				     mov bh, 1Eh    ; how to replace
    176	015F  CD 10				     int 10h
    177
    178	0161  B8 1003				     mov ax, 1003h
    179	0164  B3 00				     mov bl, 00h
    180	0166  CD 10				     int 10h	     ; switch off blinking
    181
    182	0168  BF B800				     mov di, 0b800h
    183	016B  8E C7				     mov es, di
    184
    185	016D  B9 0007				     mov cx, winTxtLen
    186	0170  BE 0048r				     lea si, winTxt
    187	0173  BF 04A8				     mov di, 7d	* 160d + 72d
    188
    189	0176  AD		     @@Loop:	     lodsw
    190	0177  AB				     stosw
    191	0178  E2 FC				     loop @@Loop
    192
    193	017A  B9 002D				     mov cx, err1TxtLen
    194	017D  BE 0056r				     lea si, err1Txt
    195	0180  BF 064A				     mov di, 10d * 160d	+ 10d
    196	0183  E8 0055				     call PrintText
    197
    198	0186  B9 002E				     mov cx, err2TxtLen
    199	0189  BE 0083r				     lea si, err2Txt
    200	018C  BF 06EA				     mov di, 11d * 160d	+ 10d
    201	018F  E8 0049				     call PrintText
    202
    203	0192  B9 0032				     mov cx, err3TxtLen
    204	0195  BE 00B1r				     lea si, err3Txt
    205	0198  BF 078A				     mov di, 12d * 160d	+ 10d
    206	019B  E8 003D				     call PrintText
    207
    208	019E  B9 002F				     mov cx, err4TxtLen
    209	01A1  BE 00E3r				     lea si, err4Txt
    210	01A4  BF 082A				     mov di, 13d * 160d	+ 10d
    211	01A7  E8 0031				     call PrintText
    212
    213	01AA  B9 0009				     mov cx, err5TxtLen
    214	01AD  BE 0112r				     lea si, err5Txt
    215	01B0  BF 08CA				     mov di, 14d * 160d	+ 10d
    216	01B3  E8 0025				     call PrintText
    217
    218	01B6  B9 0027				     mov cx, err6TxtLen
    219	01B9  BE 011Br				     lea si, err6Txt
    220	01BC  BF 0A0A				     mov di, 16d * 160d	+ 10d
    221	01BF  E8 0019				     call PrintText
    222
    223	01C2  B9 002F				     mov cx, err7TxtLen
    224	01C5  BE 0142r				     lea si, err7Txt
    225	01C8  BF 0AAA				     mov di, 17d * 160d	+ 10d
    226	01CB  E8 000D				     call PrintText
    227
    228	01CE  B9 003A				     mov cx, err8TxtLen
Turbo Assembler	 Version 4.1	    03/08/23 23:20:54	    Page 5
hackme.asm



    229	01D1  BE 0171r				     lea si, err8Txt
    230	01D4  BF 0B4A				     mov di, 18d * 160d	+ 10d
    231	01D7  E8 0001				     call PrintText
    232
    233	01DA  C3				     ret
    234	01DB					     endp
    235
    236
    237	01DB			     PrintText	     proc
    238
    239	01DB  B4 17				     mov ah, 00010111b		    ; ah = white
    240
    241	01DD  AC		     @@Loop:	     lodsb	     ; ds:si ->	al
    242	01DE  AB				     stosw
    243	01DF  E2 FC				     loop @@Loop
    244
    245	01E1  C3				     ret
    246	01E2					     endp
    247
    248				     end     Start
Turbo Assembler	 Version 4.1	    03/08/23 23:20:54	    Page 6
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "03/08/23"
??FILENAME			  Text	 "hackme  "
??TIME				  Text	 "23:20:54"
??VERSION			  Number 040A
@32BIT				  Text	 0
@@AKI				  Near	 DGROUP:0148
@@ETALONEND			  Near	 DGROUP:0140
@@EXIT				  Near	 DGROUP:011E
@@LOOP				  Near	 DGROUP:010D
@@LOOP				  Near	 DGROUP:012B
@@LOOP				  Near	 DGROUP:0176
@@LOOP				  Near	 DGROUP:01DD
@@NOPE				  Near	 DGROUP:0150
@CODE				  Text	 DGROUP
@CODESIZE			  Text	 0
@CPU				  Text	 0101H
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 HACKME
@INTERFACE			  Text	 000H
@MODEL				  Text	 1
@STACK				  Text	 DGROUP
@WORDSIZE			  Text	 2
AKITXT				  Near	 DGROUP:002B
COMPAREPASS			  Near	 DGROUP:0122
DRAWBSOD			  Near	 DGROUP:0154
ERR1TXT				  Near	 DGROUP:0056
ERR1TXTLEN			  Number 002D
ERR2TXT				  Near	 DGROUP:0083
ERR2TXTLEN			  Number 002E
ERR3TXT				  Near	 DGROUP:00B1
ERR3TXTLEN			  Number 0032
ERR4TXT				  Near	 DGROUP:00E3
ERR4TXTLEN			  Number 002F
ERR5TXT				  Near	 DGROUP:0112
ERR5TXTLEN			  Number 0009
ERR6TXT				  Near	 DGROUP:011B
ERR6TXTLEN			  Number 0027
ERR7TXT				  Near	 DGROUP:0142
ERR7TXTLEN			  Number 002F
ERR8TXT				  Near	 DGROUP:0171
ERR8TXTLEN			  Number 003A
MAX_PASS_LEN			  Number 0014
NOPETXT				  Near	 DGROUP:003A
PASS				  Near	 DGROUP:0000
PRINTTEXT			  Near	 DGROUP:01DB
READPASS			  Near	 DGROUP:0107
START				  Near	 DGROUP:0100
USERPASS			  Near	 DGROUP:0015
WINTXT				  Near	 DGROUP:0048
WINTXTLEN			  Number 0007
Turbo Assembler	 Version 4.1	    03/08/23 23:20:54	    Page 7
Symbol Table




Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  _DATA				  16  01AB Word	  Public  DATA
  _TEXT				  16  01E2 Word	  Public  CODE
