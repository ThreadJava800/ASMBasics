Turbo Assembler	 Version 4.1	    02/14/23 01:38:04	    Page 1
function.asm



      1	0000			     .model tiny
      2	0000			     .code
      3
      4				     org 100h
      5
      6				     locals @@
      7
      8	0100			     Start:
      9	0100  BB B800			     mov bx, 0b800h
     10	0103  8E C3			     mov es, bx
     11	0105  BB 0370			     mov bx, 160d * 5d + 80d ; middle of 5 line
     12	0108  BE 016B			     mov si, 16Bh
     13	010B  E8 0036			     call ToHex
     14
     15	010E  B8 4C00			     mov ax, 4c00h
     16	0111  CD 21			     int 21h		     ; exit(0)
     17
     18
     19
     20				     ;-----------------------------------------------------------
     21				     ; Print binary of value
     22				     ;-----------------------------------------------------------
     23				     ; Entry:	     AX	= value	to convert to
     24				     ;		     BX	= coordinates to print on string
     25				     ; Exit:	     None
     26				     ; Expects:	     ES	-> videomem (b800h)
     27				     ; Destroys:     BX, CX, DL
     28				     ;-----------------------------------------------------------
     29	0113			     ToBin   proc
     30
     31	0113  BA 8000			     mov dx, 8000h	     ; dx = 2 ** 15
     32	0116  EB 17 90			     jmp @@NewByte
     33
     34	0119			     @@Print1:
     35	0119  26: C7 07	0531		     mov es:[bx], 0531h	     ; put 0 to	videomem
     36	011E  83 C3 02			     add bx, 2		     ; bx += 2
     37	0121  EB 17 90			     jmp @@Next
     38
     39	0124			     @@Print0:
     40	0124  26: C7 07	0530		     mov es:[bx], 0530h	     ; put 0 to	videomem
     41	0129  83 C3 02			     add bx, 2		     ; bx += 2
     42	012C  EB 0C 90			     jmp @@Next
     43
     44	012F			     @@NewByte:
     45	012F  8B C8			     mov cx, ax		     ; cx = ax
     46	0131  23 CA			     and cx, dx		     ; cx && dx
     47
     48	0133  83 F9 00			     cmp cx, 0h		     ; if cx ==	0: print(0) else: print(1)
     49	0136  74 EC			     je	 @@Print0
     50	0138  EB DF			     jmp @@Print1
     51
     52	013A			     @@Next:
     53	013A  83 FA 01			     cmp dx, 1h		     ; if dx ==	1: return
     54	013D  74 04			     je	@@Exit
     55
     56	013F  D1 EA			     shr dx, 1		     ; dx >> 1
     57	0141  EB EC			     jmp @@NewByte
Turbo Assembler	 Version 4.1	    02/14/23 01:38:04	    Page 2
function.asm



     58
     59	0143  C3		     @@Exit: ret
     60	0144				     endp
     61
     62				     ;-----------------------------------------------------------
     63				     ; Print hex of value
     64				     ;-----------------------------------------------------------
     65				     ; Entry:	     SI	= value	to convert to
     66				     ;		     BX	= coordinates to print in cmd
     67				     ; Exit:	     None
     68				     ; Expects:	     ES	-> videomem (b800h)
     69				     ; Destroys:     AX, BX, CX, DX, DI, BP, SP
     70				     ;----------------------------------------------------------
     71	0144			     ToHex   proc
     72
     73	0144  BA 8000			     mov dx, 8000h
     74	0147  B9 0004			     mov cx, 0004h	     ; cx = 0
     75	014A  BF 0000			     mov di, 0000h
     76
     77	014D			     @@ReadBytes:
     78	014D  FE C5			     inc ch
     79	014F  80 FD 05			     cmp ch, 05h
     80	0152  74 45			     je	@@Exit
     81	0154  EB 01 90			     jmp @@Proceed4bit
     82
     83	0157			     @@Proceed4bit:
     84	0157  8B C6			     mov ax, si
     85	0159  23 C2			     and ax, dx
     86
     87	015B  3D 0000			     cmp ax, 00h
     88	015E  74 0E			     je	@@SkipMul
     89
     90	0160  B0 01			     mov al, 01h
     91	0162  B4 00			     mov ah, 00h
     92	0164  80 E9 01			     sub cl, 1
     93	0167  D2 E0			     shl al, cl
     94	0169  80 C1 01			     add cl, 1
     95	016C  03 F8			     add di, ax
     96
     97	016E			     @@SkipMul:
     98	016E  80 E9 01			     sub cl, 1
     99	0171  D1 EA			     shr dx, 1
    100
    101	0173  80 F9 00			     cmp cl, 00h
    102	0176  74 02			     je	@@PrintSymbol
    103	0178  EB DD			     jmp @@Proceed4bit
    104
    105	017A			     @@PrintSymbol:
    106	017A  8B C7			     mov ax, di
    107	017C  B4 05			     mov ah, 05h
    108
    109	017E  3C 0A			     cmp al, 10d
    110	0180  73 05			     jae @@LetterPrint
    111
    112	0182  04 30			     add al, 30h
    113	0184  EB 06 90			     jmp @@ContinuePrint
    114
Turbo Assembler	 Version 4.1	    02/14/23 01:38:04	    Page 3
function.asm



    115	0187			     @@LetterPrint:
    116	0187  04 37			     add al, 37h
    117	0189  EB 01 90			     jmp @@ContinuePrint
    118
    119	018C			     @@ContinuePrint:
    120	018C  26: 89 07			     mov es:[bx], ax
    121	018F  83 C3 02			     add bx, 2
    122	0192  BF 0000			     mov di, 00h
    123	0195  B1 04			     mov cl, 04h
    124	0197  EB B4			     jmp @@ReadBytes
    125
    126	0199			     @@Exit:
    127	0199  C3			     ret
    128	019A				     endp
    129
    130
    131				     ;-----------------------------------------------------------
    132				     ; Print dec of value
    133				     ;-----------------------------------------------------------
    134				     ; Entry:	     SI	= value	to convert to
    135				     ;		     BX	= coordinates to print on string
    136				     ; Exit:	     None
    137				     ; Expects:	     ES	-> videomem (b800h)
    138				     ; Destroys:     AX, BX, CX, DX, DI
    139				     ;-----------------------------------------------------------
    140	019A			     ToDec   proc
    141
    142	019A  BA 0100			     mov dx, 0100h	     ; dx = 256d
    143	019D  8B CE			     mov cx, si		     ; cx = si
    144	019F  BF 0000			     mov di, 00h	     ; di = 0
    145
    146	01A2			     @@ParseNewBit:
    147	01A2  23 CA			     and cx, dx
    148	01A4  83 F9 00			     cmp cx, 00h
    149	01A7  74 02			     je	@@SkipMul
    150
    151	01A9  03 FA			     add di, dx
    152
    153
    154	01AB			     @@SkipMul:
    155	01AB  83 FA 01			     cmp dx, 01h
    156	01AE  74 06			     je	@@Print
    157
    158	01B0  D1 EA			     shr dx, 1
    159	01B2  8B CE			     mov cx, si
    160	01B4  EB EC			     jmp @@ParseNewBit
    161
    162	01B6			     @@Print:
    163	01B6  83 C3 0A			     add bx, 10
    164	01B9  BA 0000			     mov dx, 0000h
    165	01BC  8B C6			     mov ax, si
    166	01BE  BF 0005			     mov di, 5
    167
    168	01C1			     @@PrintSymb:
    169	01C1  B9 000A			     mov cx, 000Ah	     ; cx = 10
    170	01C4  F7 F1			     div cx		     ; ax = ax / 10, dx	= ax % 10
    171
Turbo Assembler	 Version 4.1	    02/14/23 01:38:04	    Page 4
function.asm



    172	01C6  80 C2 30			     add dl, 30h
    173	01C9  B6 05			     mov dh, 05h
    174
    175	01CB  26: 89 17			     mov es:[bx], dx
    176	01CE  BA 0000			     mov dx, 0000h
    177
    178	01D1  83 EB 02			     sub bx, 2
    179	01D4  83 EF 01			     sub di, 1
    180
    181	01D7  83 FF 00			     cmp di, 0
    182	01DA  74 02			     je	@@Exit
    183
    184	01DC  EB E3			     jmp @@PrintSymb
    185
    186	01DE  C3		     @@Exit: ret
    187	01DF				     endp
    188
    189
    190				     ;-----------------------------------------------------------
    191				     ; Put symbol with given ascii to videomem
    192				     ;-----------------------------------------------------------
    193				     ; Entry:	     BX	= coordinates where to print symbol
    194				     ;		     CX	= symbol itself
    195				     ; Exit:	     None
    196				     ; Expects:	     ES	-> videomem (b800h)
    197				     ; Destroys:     None
    198				     ;-----------------------------------------------------------
    199	01DF			     PutChar proc
    200
    201	01DF  26: 89 0F			     mov es:[bx], cx	     ; put symbol to videomem
    202
    203	01E2  C3			     ret
    204	01E3				     endp
    205
    206
    207				     end     Start
Turbo Assembler	 Version 4.1	    02/14/23 01:38:04	    Page 5
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "02/14/23"
??FILENAME			  Text	 "function"
??TIME				  Text	 "01:38:04"
??VERSION			  Number 040A
@32BIT				  Text	 0
@@CONTINUEPRINT			  Near	 DGROUP:018C
@@EXIT				  Near	 DGROUP:0143
@@EXIT				  Near	 DGROUP:0199
@@EXIT				  Near	 DGROUP:01DE
@@LETTERPRINT			  Near	 DGROUP:0187
@@NEWBYTE			  Near	 DGROUP:012F
@@NEXT				  Near	 DGROUP:013A
@@PARSENEWBIT			  Near	 DGROUP:01A2
@@PRINT				  Near	 DGROUP:01B6
@@PRINT0			  Near	 DGROUP:0124
@@PRINT1			  Near	 DGROUP:0119
@@PRINTSYMB			  Near	 DGROUP:01C1
@@PRINTSYMBOL			  Near	 DGROUP:017A
@@PROCEED4BIT			  Near	 DGROUP:0157
@@READBYTES			  Near	 DGROUP:014D
@@SKIPMUL			  Near	 DGROUP:016E
@@SKIPMUL			  Near	 DGROUP:01AB
@CODE				  Text	 DGROUP
@CODESIZE			  Text	 0
@CPU				  Text	 0101H
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 FUNCTION
@INTERFACE			  Text	 000H
@MODEL				  Text	 1
@STACK				  Text	 DGROUP
@WORDSIZE			  Text	 2
PUTCHAR				  Near	 DGROUP:01DF
START				  Near	 DGROUP:0100
TOBIN				  Near	 DGROUP:0113
TODEC				  Near	 DGROUP:019A
TOHEX				  Near	 DGROUP:0144

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  _DATA				  16  0000 Word	  Public  DATA
  _TEXT				  16  01E3 Word	  Public  CODE
