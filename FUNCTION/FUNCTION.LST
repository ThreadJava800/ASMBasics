Turbo Assembler	 Version 4.1	    02/13/23 19:30:25	    Page 1
function.asm



      1	0000			     .model tiny
      2	0000			     .code
      3
      4				     org 100h
      5
      6				     locals @@
      7
      8	0100			     Start:
      9	0100  BB B800			     mov bx, 0b800h
     10	0103  8E C3			     mov es, bx
     11	0105  BB 0370			     mov bx, 160d * 5d + 80d
     12	0108  B8 0096			     mov ax, 150d
     13	010B  E8 0001			     call ToBin
     14
     15	010E  C3			     ret		     ; exit(0)
     16
     17
     18
     19				     ;-----------------------------------------------------------
     20				     ; Print binary of value
     21				     ;-----------------------------------------------------------
     22				     ; Entry:	     AX	= value	to convert to
     23				     ;		     BX	= coordinates to print on string
     24				     ; Exit:	     None
     25				     ; Expects:	     ES	-> videomem (b800h)
     26				     ; Destroys:     BX, CX, DL
     27				     ;-----------------------------------------------------------
     28	010F			     ToBin   proc
     29
     30	010F  BA 0100			     mov dx, 100h
     31	0112  EB 17 90			     jmp @@NewByte
     32
     33	0115			     @@Print1:
     34	0115  26: C7 07	0531		     mov es:[bx], 0531h
     35	011A  83 C3 02			     add bx, 2
     36	011D  EB 17 90			     jmp @@Next
     37
     38	0120			     @@Print0:
     39	0120  26: C7 07	0530		     mov es:[bx], 0530h
     40	0125  83 C3 02			     add bx, 2
     41	0128  EB 0C 90			     jmp @@Next
     42
     43	012B			     @@NewByte:
     44	012B  8B C8			     mov cx, ax
     45	012D  23 CA			     and cx, dx
     46
     47	012F  83 F9 00			     cmp cx, 0h
     48	0132  74 EC			     je	 @@Print0
     49	0134  EB DF			     jmp @@Print1
     50
     51	0136			     @@Next:
     52	0136  83 FA 01			     cmp dx, 1h
     53	0139  74 04			     je	@@Exit
     54
     55	013B  D1 EA			     shr dx, 1		     ; dx >> 1
     56	013D  EB EC			     jmp @@NewByte
     57
Turbo Assembler	 Version 4.1	    02/13/23 19:30:25	    Page 2
function.asm



     58	013F  C3		     @@Exit: ret
     59	0140				     endp
     60
     61				     ;-----------------------------------------------------------
     62				     ; Put symbol with given ascii to videomem
     63				     ;-----------------------------------------------------------
     64				     ; Entry:	     BX	= coordinates where to print symbol
     65				     ;		     CX	= symbol itself
     66				     ; Exit:	     None
     67				     ; Expects:	     ES	-> videomem (b800h)
     68				     ; Destroys:     None
     69				     ;-----------------------------------------------------------
     70	0140			     PutChar proc
     71
     72	0140  26: 89 0F			     mov es:[bx], cx	     ; put symbol to videomem
     73
     74	0143  C3			     ret
     75	0144				     endp
     76
     77
     78				     end     Start
Turbo Assembler	 Version 4.1	    02/13/23 19:30:25	    Page 3
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "02/13/23"
??FILENAME			  Text	 "function"
??TIME				  Text	 "19:30:25"
??VERSION			  Number 040A
@32BIT				  Text	 0
@@EXIT				  Near	 DGROUP:013F
@@NEWBYTE			  Near	 DGROUP:012B
@@NEXT				  Near	 DGROUP:0136
@@PRINT0			  Near	 DGROUP:0120
@@PRINT1			  Near	 DGROUP:0115
@CODE				  Text	 DGROUP
@CODESIZE			  Text	 0
@CPU				  Text	 0101H
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 FUNCTION
@INTERFACE			  Text	 000H
@MODEL				  Text	 1
@STACK				  Text	 DGROUP
@WORDSIZE			  Text	 2
PUTCHAR				  Near	 DGROUP:0140
START				  Near	 DGROUP:0100
TOBIN				  Near	 DGROUP:010F

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  _DATA				  16  0000 Word	  Public  DATA
  _TEXT				  16  0144 Word	  Public  CODE
