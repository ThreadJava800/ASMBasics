Turbo Assembler	 Version 4.1	    02/13/23 22:41:39	    Page 1
function.asm



      1	0000			     .model tiny
      2	0000			     .code
      3
      4				     org 100h
      5
      6				     locals @@
      7
      8	0100			     Start:
      9	0100  BB B800			     mov bx, 0b800h
     10	0103  8E C3			     mov es, bx
     11	0105  BB 0370			     mov bx, 160d * 5d + 80d ; middle of 5 line
     12	0108  BE 03E8			     mov si, 1000d
     13	010B  E8 0032			     call ToDec
     14
     15	010E  C3			     ret		     ; exit(0)
     16
     17
     18
     19				     ;-----------------------------------------------------------
     20				     ; Print binary of value
     21				     ;-----------------------------------------------------------
     22				     ; Entry:	     AX	= value	to convert to
     23				     ;		     BX	= coordinates to print on string
     24				     ; Exit:	     None
     25				     ; Expects:	     ES	-> videomem (b800h)
     26				     ; Destroys:     BX, CX, DL
     27				     ;-----------------------------------------------------------
     28	010F			     ToBin   proc
     29
     30	010F  BA 0100			     mov dx, 100h	     ; dx = 256d
     31	0112  EB 17 90			     jmp @@NewByte
     32
     33	0115			     @@Print1:
     34	0115  26: C7 07	0531		     mov es:[bx], 0531h	     ; put 0 to	videomem
     35	011A  83 C3 02			     add bx, 2		     ; bx += 2
     36	011D  EB 17 90			     jmp @@Next
     37
     38	0120			     @@Print0:
     39	0120  26: C7 07	0530		     mov es:[bx], 0530h	     ; put 0 to	videomem
     40	0125  83 C3 02			     add bx, 2		     ; bx += 2
     41	0128  EB 0C 90			     jmp @@Next
     42
     43	012B			     @@NewByte:
     44	012B  8B C8			     mov cx, ax		     ; cx = ax
     45	012D  23 CA			     and cx, dx		     ; cx && dx
     46
     47	012F  83 F9 00			     cmp cx, 0h		     ; if cx ==	0: print(0) else: print(1)
     48	0132  74 EC			     je	 @@Print0
     49	0134  EB DF			     jmp @@Print1
     50
     51	0136			     @@Next:
     52	0136  83 FA 01			     cmp dx, 1h		     ; if dx ==	1: return
     53	0139  74 04			     je	@@Exit
     54
     55	013B  D1 EA			     shr dx, 1		     ; dx >> 1
     56	013D  EB EC			     jmp @@NewByte
     57
Turbo Assembler	 Version 4.1	    02/13/23 22:41:39	    Page 2
function.asm



     58	013F  C3		     @@Exit: ret
     59	0140				     endp
     60
     61
     62				     ;-----------------------------------------------------------
     63				     ; Print dec of value
     64				     ;-----------------------------------------------------------
     65				     ; Entry:	     SI	= value	to convert to
     66				     ;		     BX	= coordinates to print on string
     67				     ; Exit:	     None
     68				     ; Expects:	     ES	-> videomem (b800h)
     69				     ; Destroys:     AX, BX, CX, DX, DI
     70				     ;-----------------------------------------------------------
     71	0140			     ToDec   proc
     72
     73	0140  BA 0100			     mov dx, 0100h	     ; dx = 256d
     74	0143  8B CE			     mov cx, si		     ; cx = si
     75	0145  BF 0000			     mov di, 00h	     ; di = 0
     76
     77	0148			     @@ParseNewBit:
     78	0148  23 CA			     and cx, dx
     79	014A  83 F9 00			     cmp cx, 00h
     80	014D  74 02			     je	@@SkipMul
     81
     82	014F  03 FA			     add di, dx
     83
     84
     85	0151			     @@SkipMul:
     86	0151  83 FA 01			     cmp dx, 01h
     87	0154  74 06			     je	@@Print
     88
     89	0156  D1 EA			     shr dx, 1
     90	0158  8B CE			     mov cx, si
     91	015A  EB EC			     jmp @@ParseNewBit
     92
     93	015C			     @@Print:
     94	015C  83 C3 0A			     add bx, 10
     95	015F  BA 0000			     mov dx, 0000h
     96	0162  8B C6			     mov ax, si
     97	0164  BF 0005			     mov di, 5
     98
     99	0167			     @@PrintSymb:
    100	0167  B9 000A			     mov cx, 000Ah	     ; cx = 10
    101	016A  F7 F1			     div cx		     ; ax = ax / 10, dx	= ax % 10
    102
    103	016C  80 C2 30			     add dl, 30h
    104	016F  B6 05			     mov dh, 05h
    105
    106	0171  26: 89 17			     mov es:[bx], dx
    107	0174  BA 0000			     mov dx, 0000h
    108
    109	0177  83 EB 02			     sub bx, 2
    110	017A  83 EF 01			     sub di, 1
    111
    112	017D  83 FF 00			     cmp di, 0
    113	0180  74 02			     je	@@Exit
    114
Turbo Assembler	 Version 4.1	    02/13/23 22:41:39	    Page 3
function.asm



    115	0182  EB E3			     jmp @@PrintSymb
    116
    117	0184  C3		     @@Exit: ret
    118	0185				     endp
    119
    120
    121				     ;-----------------------------------------------------------
    122				     ; Put symbol with given ascii to videomem
    123				     ;-----------------------------------------------------------
    124				     ; Entry:	     BX	= coordinates where to print symbol
    125				     ;		     CX	= symbol itself
    126				     ; Exit:	     None
    127				     ; Expects:	     ES	-> videomem (b800h)
    128				     ; Destroys:     None
    129				     ;-----------------------------------------------------------
    130	0185			     PutChar proc
    131
    132	0185  26: 89 0F			     mov es:[bx], cx	     ; put symbol to videomem
    133
    134	0188  C3			     ret
    135	0189				     endp
    136
    137
    138				     end     Start
Turbo Assembler	 Version 4.1	    02/13/23 22:41:39	    Page 4
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "02/13/23"
??FILENAME			  Text	 "function"
??TIME				  Text	 "22:41:39"
??VERSION			  Number 040A
@32BIT				  Text	 0
@@EXIT				  Near	 DGROUP:013F
@@EXIT				  Near	 DGROUP:0184
@@NEWBYTE			  Near	 DGROUP:012B
@@NEXT				  Near	 DGROUP:0136
@@PARSENEWBIT			  Near	 DGROUP:0148
@@PRINT				  Near	 DGROUP:015C
@@PRINT0			  Near	 DGROUP:0120
@@PRINT1			  Near	 DGROUP:0115
@@PRINTSYMB			  Near	 DGROUP:0167
@@SKIPMUL			  Near	 DGROUP:0151
@CODE				  Text	 DGROUP
@CODESIZE			  Text	 0
@CPU				  Text	 0101H
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 FUNCTION
@INTERFACE			  Text	 000H
@MODEL				  Text	 1
@STACK				  Text	 DGROUP
@WORDSIZE			  Text	 2
PUTCHAR				  Near	 DGROUP:0185
START				  Near	 DGROUP:0100
TOBIN				  Near	 DGROUP:010F
TODEC				  Near	 DGROUP:0140

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  _DATA				  16  0000 Word	  Public  DATA
  _TEXT				  16  0189 Word	  Public  CODE
